@model CoMute.Web.Models.Dto.CarPoolRequest

@{
    ViewBag.Title = "Create";
}



@using (Html.BeginForm("Create", "CarPool", FormMethod.Post, new { id = "CarPoolForm" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <br />
        <br />
        <br />

        <div class="col-md-4 col-md-offset-4">
            <h2 class="text-center">Add Car Pool</h2>

            <hr />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">

                @Html.LabelFor(model => model.DepartureTime, htmlAttributes: new { @class = "" })
                @Html.EditorFor(model => model.DepartureTime, new { htmlAttributes = new { @class = "form-control ", @type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.DepartureTime, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ExpectedArrivalTime, htmlAttributes: new { @class = "" })
                @Html.EditorFor(model => model.ExpectedArrivalTime, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.ExpectedArrivalTime, "", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Origin, htmlAttributes: new { @class = "" })

                @Html.EditorFor(model => model.Origin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Origin, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DaysAvailable, htmlAttributes: new { @class = "" })

                @Html.EditorFor(model => model.DaysAvailable, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DaysAvailable, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Destination, htmlAttributes: new { @class = "" })

                @Html.EditorFor(model => model.Destination, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Destination, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AvilableSeats, htmlAttributes: new { @class = "" })

                @Html.EditorFor(model => model.AvilableSeats, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AvilableSeats, "", new { @class = "text-danger" })

            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "" })

                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })

            </div>

            <div class="form-group ">

                <div class="col-md-offset-2 col-md-10">
                    <br />
                    <br />
                    <button class="btn btn-primary btn-block" type="submit" id="sign-in">Add Car Pool</button>
                </div>
            </div>




        </div>

    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>

    $("#CarPoolForm").ajaxForm({

        beforeSend: function () {
        },

        complete: function (response) {
            let res = response.responseText;
            if (res > 0) {

                swal("Successfull", "Car Pool Successfully created.", "success")
                    .then(function (data) {
                        location.reload();
                    });

            }
            else {
                swal("Failed!", "Failed to create car pool recored.", "error");
            }
        },
        error: function () {
            console.log('error');

        }
    });
</script>